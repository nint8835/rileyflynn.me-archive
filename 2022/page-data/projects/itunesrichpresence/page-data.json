{"componentChunkName":"component---src-templates-project-tsx","path":"/projects/itunesrichpresence","result":{"data":{"mdx":{"frontmatter":{"title":"iTunesRichPresence","summary":"Integrates Discord's Rich Presence functionality with iTunes.","links":[{"label":"GitHub","variant":"normal","url":"https://github.com/nint8835/iTunesRichPresence"},{"label":"Site","variant":"primary","url":"https://itunesrichpresence.com"}],"project":{"tags":["c#","discord","application"]}},"wordCount":{"words":109},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"type\": \"project\",\n  \"title\": \"iTunesRichPresence\",\n  \"summary\": \"Integrates Discord's Rich Presence functionality with iTunes.\",\n  \"previewImage\": \"../assets/projects/itunesrichpresence.png\",\n  \"links\": [{\n    \"label\": \"GitHub\",\n    \"variant\": \"normal\",\n    \"url\": \"https://github.com/nint8835/iTunesRichPresence\"\n  }, {\n    \"label\": \"Site\",\n    \"variant\": \"primary\",\n    \"url\": \"https://itunesrichpresence.com\"\n  }],\n  \"project\": {\n    \"tags\": [\"c#\", \"discord\", \"application\"]\n  }\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"About\"), mdx(\"p\", null, \"iTunesRichPresence is a desktop application for Windows that integrates Discord's Rich Presence functionality with iTunes. With it, other Discord users will be able to see what music you are currently listening to, much like they can with the official Spotify integration.\"), mdx(\"p\", null, \"iTunesRichPresence is written in C#, and uses WPF (with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mahapps.com/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"MahApps.Metro\")), \") for the UI. For interaction with iTunes, it makes use of the official COM interfaces provided by Apple for interacting with iTunes on Windows systems.\"), mdx(\"p\", null, \"As of July 2022, iTunesRichPresence has reached 50,000 downloads on it's most recent release, and nearly a cumulative 60,000 downloads across all releases.\\nIt's official Discord server has over 300 members.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"b89fc200-f8dd-5d23-a5c9-299c6e1784d6"}},"staticQueryHashes":["2702387953","3861909122"]}