{"componentChunkName":"component---src-templates-project-tsx","path":"/projects/chainmail","result":{"data":{"mdx":{"frontmatter":{"title":"Chainmail","summary":"Wrapper for the Minecraft server software, adding basic plugin support.","links":[{"label":"GitHub","variant":"primary","url":"https://github.com/Chainmail-Project/Chainmail"}],"project":{"tags":["python","minecraft","application"]}},"wordCount":{"words":142},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"type\": \"project\",\n  \"title\": \"Chainmail\",\n  \"summary\": \"Wrapper for the Minecraft server software, adding basic plugin support.\",\n  \"previewImage\": \"../assets/projects/chainmail.png\",\n  \"links\": [{\n    \"label\": \"GitHub\",\n    \"variant\": \"primary\",\n    \"url\": \"https://github.com/Chainmail-Project/Chainmail\"\n  }],\n  \"project\": {\n    \"tags\": [\"python\", \"minecraft\", \"application\"]\n  }\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"About\"), mdx(\"p\", null, \"Chainmail is a wrapper for the Minecraft server software, which enables the addition of custom functionality via plugins.\"), mdx(\"p\", null, \"Chainmail works by running the Minecraft server software as a subprocess, reading all output to standard output from the process and parsing it to understand what is happening on the server, and writing to standard in to interact with the server.\"), mdx(\"p\", null, \"It provides a wide variety of events that plugin authors can act on, as well as a suite of tools to greatly simplify the process of interacting with the server, such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Command parsing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Object-oriented APIs for interacting with players\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rich message builder, greatly simplifying the process of authoring complex messages which should appear in the chat for users\")), mdx(\"p\", null, \"Plugin support for Chainmail is provided by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/2022/projects/jigsaw\"\n  }, \"Jigsaw\"), \", which was initially a part of Chainmail but was later split into it's own library.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"46d2aaca-44a3-5a38-9b41-9c6435d4daf8"}},"staticQueryHashes":["2702387953","3861909122"]}